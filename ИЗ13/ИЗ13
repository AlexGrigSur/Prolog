open System
open System.IO
open System.Drawing
open System.Windows.Forms

let form = new Form()
let label1 = new System.Windows.Forms.Label();
let textBox1 = new System.Windows.Forms.TextBox();
let label2 = new System.Windows.Forms.Label();
let textBox2 = new System.Windows.Forms.TextBox();
// 
// label1
// 
label1.AutoSize <- true;
label1.Location <- new System.Drawing.Point(9, 9);
label1.Name <- "label1";
label1.Size <- new System.Drawing.Size(177, 16);
label1.TabIndex <- 0;
label1.Text <- "Введите исходный список";
// 
// textBox1
// 
textBox1.Anchor <- (AnchorStyles.Top ||| AnchorStyles.Left ||| AnchorStyles.Right);
textBox1.Location <- new System.Drawing.Point(12, 28);
textBox1.Name <- "textBox1";
textBox1.Size <- new System.Drawing.Size(363, 22);
textBox1.TabIndex <- 1;
// 
// label2
// 
label2.AutoSize <- true;
label2.Location <- new System.Drawing.Point(9, 81);
label2.Name <- "label2";
label2.Size <- new System.Drawing.Size(123, 16);
label2.TabIndex <- 2;
label2.Text <- "Выходной Кортеж";
// 
// textBox2
// 
textBox2.Anchor <- (System.Windows.Forms.AnchorStyles.Top ||| System.Windows.Forms.AnchorStyles.Left ||| System.Windows.Forms.AnchorStyles.Right);
textBox2.Location <- new System.Drawing.Point(12, 97);
textBox2.Name <- "textBox2";
textBox2.Size <- new System.Drawing.Size(363, 22);
textBox2.TabIndex <- 7;
// 
// Form1
// 
form.AutoScaleDimensions <- new System.Drawing.SizeF(8.0F, 16.0F);
form.AutoScaleMode <- System.Windows.Forms.AutoScaleMode.Font;
form.ClientSize <- new System.Drawing.Size(411, 171);
form.Controls.Add(textBox2);
form.Controls.Add(label2);
form.Controls.Add(textBox1);
form.Controls.Add(label1);
form.Margin <- new System.Windows.Forms.Padding(4, 4, 4, 4);
form.Name <- "Form1";
form.Text <- "ИЗ13(№2)";


//- первый список содержит результат деления на два только четных элементов исходного
//- второй список содержит результат деления на три только тех элементов первого, которые делятся на три
//- третий список содержит квадраты значений второго списка,
//- четвертый список содержит только те элементы третьего, которые встречаются в первом,
//- пятый список содержит все элементы второго, третьего и четвертого списков. 

let Change(e:EventArgs) = 
   let rec add listEmpty textBoxCopy =
        match textBoxCopy with
        | [] -> listEmpty
        | head::tail -> 
                        try
                            Convert.ToInt32(head.ToString())
                            textBox2.Text <- textBox2.Text + head.ToString()
                            add (listEmpty@head) tail
                        with
                            | :? Exception -> add (listEmpty) tail
   let textBoxCopy = Seq.toList(textBox1.Text.Split ';')
   let listEmpty = []
   let result = add listEmpty textBoxCopy:List
   ()



textBox1.TextChanged.Add(Change)

[<STAThread>]
[<EntryPoint>]
let main argv =
    do Application.Run(form)
    0 
